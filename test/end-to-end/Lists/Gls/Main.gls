file start : Lists index
    import local : Lists Album use Album

    main context start
        standalone function declare start : private PrintInts void label string items { list type : int }
            print : { string format : ("The first {0} is {1}.") label string { list get : items 0 } int }
            print : { string format : ("The last {0} is {1}.") label string { list get : items { operation : { list length : items } minus 1 } } int }

            for each start : items item int
                print : { string format : ("{0}: {1}") label string item int }
            for each end

            for numbers start : i int 0 { list length : items }
                print : { string format : ("{0} {1}: {2}") label string i int { list get : items i } int }
            for each end
        standalone function declare end

        standalone function declare start : private PrintStrings void label string items { list type : string }
            print : { string format : ("The first {0} is {1}.") label string { list get : items 0 } string }
            print : { string format : ("The last {0} is {1}.") label string { list get : items { operation : { list length : items } minus 1 } } string }

            for each start : items item string
                print : { string format : ("{0}: {1}") label string item string }
            for each end

            for numbers start : i int 0 { list length : items }
                print : { string format : ("{0} {1}: {2}") label string i int { list get : items i } string }
            for each end
        standalone function declare end

        standalone function declare start : private { generic type : PrintListFancy T } void label string items { list type : T } getLabel { lambda type inline : string item T }
            for each start : items item T
                print : { lambda : getLabel item }
            for each end

            for numbers start : i int 0 { list length : items }
                print : { string format : ("{0} {1}: {2}") label string i int { lambda : getLabel { list get : items i } } string }
            for each end
        standalone function declare end

        main start
            comment line : Initialization
            variable : aaa { list type : string } { list new : string }
            variable : bbb { list type : int } { list new : int 1 2 3 }
            variable : ccc { list type : { list type : string } } { list new : { list type : string } aaa { list new : string "eee" "fff" "ggg" } }

            comment line : Members
            variable : fruits { list type : string } { list new : string "apple" "banana" "cherry" }
            print : { string format : ("There are {0} fruits.") { list length : fruits } int }
            print : { string format : ("The first fruit is {0}.") { list get : fruits 0 } string }

            comment line : Popping
            variable : colors { list type : string } { list new : string "red" "orange" "yellow" "green" }
            list pop : colors
            print : { string format : ("The last color is {0}.") { list get : colors { operation : { list length : colors } minus 1 } } string }

            list pop front : colors
            print : { string format : ("The first color is {0}.") { list get : colors 0 } string }

            comment line : Pushing
            variable : pets { list type : string } { list new : string "bird" "cat" }
            list push : pets "dog"
            print : { string format : ("The last pet is {0}.") { list get : pets { operation : { list length : pets } minus 1 } } string }

            comment line : Sorting (strings)
            variable : flavors { list type : string } { list new : string "plain" "chocolate" "vanilla" "strawberry" }
            list sort strings : flavors
            standalone function : private { main group } PrintStrings "flavor" flavors

            comment line : Sorting (ints)
            variable : ints { list type : int } { list new : int 1 10 2 -3 8 4 5 }
            list sort numbers : ints
            standalone function : private { main group } PrintInts "int" ints

            comment line : Sorting (members)
            variable : albums { list type : Album } { list new : Album { new : Album "Thriller" 1982 } { new : Album ("Back in Black") 1980 } { new : Album ("The Dark Side of the Moon") 1973 } }
            list sort member strings: albums public album Name
            standalone function : private { main group } PrintListFancy ("album by name") albums { lambda declare : string album Album { member variable : public album Name } }
            list sort member numbers: albums public album Year
            standalone function : private { main group } PrintListFancy ("album by year") albums { lambda declare : string album Album { member function : public album GetLabel } }
        main end
    main context end
file end
